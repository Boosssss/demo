services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: django-backend
    volumes:
      - ./back:/app:cached
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn backend.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  static_volume:
  media_volume:
